import numpy as np
import pyautogui
import time
from scipy.interpolate import interp2d

pyautogui.PAUSE = 0.01

# Your original WGDC Base table (19x16, Boost x RPM)
orig_rpm = np.array([0, 500, 1000, 1500, 2000, 2500, 3000, 3500, 4000, 4500, 5000, 5500, 6000, 6500, 7000, 7500])
orig_boost = np.linspace(0, 25, 19)  # or use your real breakpoints if different
orig_base = np.array([
    [20.00, 20.67, 21.33, 22.00, 22.67, 23.33, 24.00, 24.67, 25.33, 26.00, 26.67, 27.33, 28.00, 28.67, 29.33, 30.00],
    [30.00, 30.33, 30.67, 31.00, 31.33, 31.67, 32.00, 32.33, 32.67, 33.00, 33.33, 33.67, 34.00, 34.33, 34.67, 35.00],
    [35.00, 35.33, 35.67, 36.00, 36.33, 36.67, 37.00, 37.33, 37.67, 38.00, 38.33, 38.67, 39.00, 39.33, 39.67, 40.00],
    [40.00, 40.33, 40.67, 41.00, 41.33, 41.67, 42.00, 42.33, 42.67, 43.00, 43.33, 43.67, 44.00, 44.33, 44.67, 45.00],
    [42.93, 43.27, 43.60, 43.95, 44.29, 44.63, 44.98, 45.32, 45.65, 46.00, 46.34, 46.68, 47.03, 47.37, 47.70, 48.05],
    [44.84, 45.18, 45.53, 45.87, 46.21, 46.56, 46.89, 47.23, 47.58, 47.92, 48.26, 48.61, 48.94, 49.28, 49.63, 49.97],
    [47.90, 48.26, 48.60, 48.95, 49.31, 49.65, 50.00, 50.36, 50.70, 51.05, 51.41, 51.75, 52.10, 52.46, 52.80, 53.15],
    [49.88, 50.22, 50.58, 50.93, 51.27, 51.63, 51.98, 52.32, 52.68, 53.03, 53.37, 53.73, 54.08, 54.42, 54.78, 55.12],
    [51.85, 52.20, 52.54, 52.90, 53.25, 53.59, 53.95, 54.30, 54.64, 55.00, 55.35, 55.69, 56.05, 56.40, 56.74, 57.10],
    [53.81, 54.16, 54.52, 54.86, 55.21, 55.57, 55.91, 56.26, 56.62, 56.96, 57.31, 57.67, 58.01, 58.36, 58.72, 59.06],
    [58.43, 58.81, 59.17, 59.53, 59.91, 60.27, 60.63, 61.01, 61.37, 61.73, 62.11, 62.47, 62.83, 63.21, 63.57, 63.93],
    [60.50, 60.86, 61.24, 61.60, 61.96, 62.34, 62.70, 63.06, 63.44, 63.80, 64.16, 64.54, 64.90, 65.26, 65.64, 66.00],
    [62.57, 62.93, 63.29, 63.67, 64.03, 64.39, 64.77, 65.13, 65.49, 65.87, 66.23, 66.59, 66.97, 67.33, 67.69, 68.07],
    [64.62, 64.99, 65.36, 65.73, 66.09, 66.46, 66.83, 67.19, 67.56, 67.93, 68.29, 68.66, 69.03, 69.39, 69.76, 70.12],
    [72.74, 73.15, 73.55, 73.94, 74.35, 74.75, 75.14, 75.55, 75.95, 76.34, 76.75, 77.15, 77.54, 77.95, 78.35, 78.74],
    [75.00, 75.40, 75.80, 76.20, 76.60, 77.00, 77.40, 77.80, 78.20, 78.60, 79.00, 79.40, 79.80, 80.20, 80.60, 81.00],
    [77.26, 77.65, 78.05, 78.46, 78.85, 79.25, 79.66, 80.05, 80.45, 80.86, 81.25, 81.65, 82.06, 82.45, 82.85, 83.26],
    [79.50, 79.90, 80.30, 80.70, 81.10, 81.50, 81.90, 82.30, 82.70, 83.10, 83.50, 83.90, 84.30, 84.70, 85.10, 85.50],
    [81.74, 82.15, 82.55, 82.94, 83.35, 83.75, 84.14, 84.55, 84.95, 85.34, 85.75, 86.15, 86.54, 86.95, 87.35, 87.74],
    [84.00, 84.40, 84.80, 85.20, 85.60, 86.00, 86.40, 86.80, 87.20, 87.60, 88.00, 88.40, 88.80, 89.20, 89.60, 90.00]
])

# Antilag axes
antilag_rpm = np.array([0, 1500, 2500, 3000, 3500, 4000, 4500, 5000])
antilag_boost = np.array([0, 2, 4, 6, 8, 10, 12, 14, 16, 18])

# Interpolate to 10x8 (rows: boost, cols: rpm)
interp_func = interp2d(orig_rpm, orig_boost, orig_base, kind='linear')
antilag_base = np.array([interp_func(antilag_rpm, y) for y in antilag_boost])

def input_table_to_tunerpro(table_2d):
    rows, cols = table_2d.shape
    print(f"Switch to TunerPro in 5 seconds (top-left cell selected).")
    time.sleep(5)
    for r in range(rows):
        for c in range(cols):
            val = table_2d[r, c]
            pyautogui.typewrite(str(round(val, 2)))
            pyautogui.press('right')
            time.sleep(0.04)
        for _ in range(cols):
            pyautogui.press('left')
        pyautogui.press('down')

input_table_to_tunerpro(antilag_base)